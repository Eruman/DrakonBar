/* Autogenerated with DRAKON Editor 1.23 */
#ifndef INDEXED_H67859
#define INDEXED_H67859

#include "lib.h"

typedef struct indexed indexed;
typedef struct employee employee;
typedef int (*employee_fun)(employee* item, void* user_data /* null */);


indexed* /* own */
indexed_create(void);


void
indexed_destroy(indexed* me /* own. null */);


int
indexed_error(const indexed* db);


int
employee_id(const employee* me);


employee* /* null */
indexed_get_employee(indexed* db,
    int rec_id);


const string8* /* null */
employee_cget_name(const employee* me);


int
indexed_set_employee_name(indexed* db,
    employee* _record_,
    string8* new_value /* own. null */);


employee* /* null */
indexed_insert_employee(indexed* db,
    string8* name /* own. null */);


int
indexed_delete_employee(indexed* db,
    employee* record /* null */);


int
indexed_employee_count(const indexed* db);


int
indexed_foreach_employee(indexed* db,
    employee_fun visitor,
    void* user_data /* null */);


employee* /* null */
indexed_employee_by_name(indexed* db,
    const string8* name /* null */);






int main(
    int argc,
    char** argv
);


#endif

