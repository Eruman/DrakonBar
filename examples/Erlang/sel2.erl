% Autogenerated with DRAKON Editor 1.26

-module(sel2).
-export([case1/1, case2/1, case3/0, case4/0, case5/0, short/1]).

case1(Arg1) ->
    % item 52
    case Arg1 =:= 0 of true -> 
        % item 55
        io:format("0~n", [])
    ; false ->
        case Arg1 of
            ok ->
                % item 16
                io:format("ok~n", [])
            ;
            error ->
                % item 16
                io:format("ok~n", [])
            ;
            {foo, Message} ->
                % item 14
                io:format("ok ~p~n", [Message])
            ;
            {bar, Message} ->
                % item 51
                io:format("bar ~p~n", [Message])
            ;
            _ ->
            throw("Unexpected switch value")
        end
    end
.

case2(Arg1) ->
    case Arg1 of
        ok ->
            % item 44
            io:format("ok~n", []),
            % item 56
            io:format("ok2~n", []),
            % item 57
            io:format("ok3~n", [])
        ;
        {foo, Message} ->
            % item 42
            io:format("~p~n", [Message]),
            % item 57
            io:format("ok3~n", [])
        ;
       _ ->
            % item 47
            io:format("else~n", []),
            % item 57
            io:format("ok3~n", [])
    end
.

case3() ->
    receive
        ok ->
            % item 70
            io:format("ok~n", []),
            % item 74
            io:format("ok2~n", []),
            % item 75
            io:format("ok3~n", [])
        ;
        {foo, Message} ->
            % item 68
            io:format("~p~n", [Message]),
            % item 75
            io:format("ok3~n", [])
        ;
       _ ->
            % item 73
            io:format("else~n", []),
            % item 75
            io:format("ok3~n", [])
    end
.

case4() ->
    receive
        ok ->
            % item 90
            ok
        ;
        {error, _Message} ->
            % item 91
            error
        ;
        _ ->
            % item 92
            other
        
        after 6000 ->
            % item 93
            timeout
    end
.

case5() ->
    receive
        ok ->
            % item 109
            ok
        ;
        {error, _Message} ->
            % item 110
            error
        
        after 6000 ->
            % item 112
            timeout
    end
.

short(Arg) ->
    % item 22
    case ((Arg =:= 0) orelse (Arg =:= 1)) orelse (Arg =:= 2) of true -> 
        % item 27
        true
    ; false ->
        % item 28
        false
    end
.


